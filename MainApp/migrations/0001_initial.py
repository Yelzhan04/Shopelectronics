# Generated by Django 3.2 on 2021-05-07 19:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Basket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_product', models.PositiveIntegerField(default=0)),
                ('final_price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Total price')),
                ('in_order', models.BooleanField(default=False)),
                ('for_unkown_user', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Smartphone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, verbose_name='Product Name')),
                ('slug', models.SlugField(unique=True)),
                ('image', models.ImageField(upload_to='', verbose_name='Product Image')),
                ('description', models.TextField(null=True, verbose_name='Product Description')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Price')),
                ('diagonal', models.CharField(max_length=255, verbose_name='Diagonal')),
                ('display_type', models.CharField(max_length=255, verbose_name='Type of display')),
                ('resolution', models.CharField(max_length=255, verbose_name='Screen resolution')),
                ('battery_volume', models.CharField(max_length=255, verbose_name='Volume of battery')),
                ('ram', models.CharField(max_length=255, verbose_name='RAM')),
                ('sd', models.BooleanField(default=True)),
                ('sd_volume', models.CharField(max_length=255, verbose_name='Maximum built-in memory')),
                ('back_cam_mp', models.CharField(max_length=255, verbose_name='Back camera')),
                ('front_cam_mp', models.CharField(max_length=255, verbose_name='Front camera')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MainApp.category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Notebook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, verbose_name='Product Name')),
                ('slug', models.SlugField(unique=True)),
                ('image', models.ImageField(upload_to='', verbose_name='Product Image')),
                ('description', models.TextField(null=True, verbose_name='Product Description')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Price')),
                ('diagonal', models.CharField(max_length=255, verbose_name='Diagonal')),
                ('display_type', models.CharField(max_length=255, verbose_name='Type of display')),
                ('proccesor_freq', models.CharField(max_length=255, verbose_name='CPU frequency')),
                ('ram', models.CharField(max_length=255, verbose_name='RAM')),
                ('graph_card', models.CharField(max_length=255, verbose_name='Graphics card')),
                ('time_without_charge', models.CharField(max_length=255, verbose_name='Battery life')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MainApp.category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=20, verbose_name='Phone number')),
                ('address', models.CharField(max_length=255, verbose_name='Address')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='BasketProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('final_price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Total price')),
                ('basket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_product', to='MainApp.basket', verbose_name='Basket')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MainApp.customer', verbose_name='Buyer')),
            ],
        ),
        migrations.AddField(
            model_name='basket',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MainApp.customer', verbose_name='Owner'),
        ),
        migrations.AddField(
            model_name='basket',
            name='products',
            field=models.ManyToManyField(blank=True, related_name='related_basket', to='MainApp.BasketProduct'),
        ),
    ]
